name: ML Pipeline Tests

on:
  push:
    branches: [ main ]
  #pull_request:
  #  branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Create required directories
      run: |
        mkdir -p artifacts/data_ingestion
        mkdir -p artifacts/data_validation
        mkdir -p artifacts/data_transformation
        mkdir -p artifacts/model_trainer
        mkdir -p artifacts/model_evaluation
        mkdir -p config

    - name: Run tests with coverage
      run: |
        pytest tests/test_pipeline.py -v --cov=src --cov-report=term-missing

    - name: Archive test artifacts
      uses: actions/upload-artifact@v3
      if: success() || failure()
      with:
        name: test-artifacts
        path: |
          artifacts/
          config/